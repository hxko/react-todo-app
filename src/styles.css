:root {
  --primary-color: hsl(120, 6%, 46%);
  --bg-primary: color-mix(in srgb, var(--primary-color) 20%, white);
  --bg-secondary: linear-gradient(135deg,
      color-mix(in srgb, var(--primary-color) 90%, rgb(0, 0, 0)) 0%,
      color-mix(in srgb, var(--primary-color) 60%, black) 100%);
  --text-color: color-mix(in srgb, var(--primary-color) 50%, black);
  /* Mix for optimal contrast */
  --alert-color: #FF5A5A;
  --success-color: #3CB371;
  --font-family: ;
}

/* Dark mode styles */
.dark-mode {
  --bg-primary: color-mix(in srgb, var(--primary-color) 20%, black);
  --bg-secondary: linear-gradient(135deg,
      color-mix(in srgb, var(--primary-color) 40%, black) 0%,
      color-mix(in srgb, var(--primary-color) 60%, black) 100%);
  --text-color: color-mix(in srgb, var(--primary-color) 50%, white);
  /* Light text for dark backgrounds */
}


/* Global styles */
html {
  min-height: 100%;
}

* {
  font-family: var(--font-family, Arial, sans-serif);
  box-sizing: border-box;
}

body {
  font-family:
    'Roboto',
    'Helvetica Neue',
    'Segoe UI',
    'Arial',
    sans-serif;
  /* Fallback to sans-serif */
  background: var(--bg-secondary);
  color: var(--text-color);
  padding: 1rem;
  margin: 0 auto;
  transition: background-color 0.5s ease;
  overflow-x: hidden;
  display: flex;
  justify-content: center;
  font-size: 16px;
}

/* Main container */
main {
  padding: 20px;
  border-radius: 0.5em;
  background: var(--bg-primary);
  min-width: 300px;
  width: 95svw;

  max-width: 500px;
}

/* Additional styles remain unchanged */


/* Header */
.header {
  font-size: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 0.5rem;
}

/* Form styles */
.new-item-form {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.form-row {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

input {
  outline: none;
  border: 1px solid var(--text-color);
  /* Use text color for border */
  border-radius: 0.25em;
  padding: 0.6em 0.5em;
  color: var(--text-color);
  /* Use text color for input text */
  background: color-mix(in srgb, var(--primary-color) 30%, white);
  /* Light pastel background based on primary color */
}

input::placeholder {
  color: var(--text-color);
  /* Use text color for placeholder */
}

input:focus {
  border: 1px solid var(--text-color);
  /* Use text color on focus */

}

/* Dark mode styles for input fields */
.dark-mode input {
  background: color-mix(in srgb, var(--primary-color) 40%, black);
  /* Darker background in dark mode */
  border: 1px solid var(--text-color);
  /* Keep border color consistent */
}


/* Button styles */
.btn {
  background: color-mix(in srgb, var(--bg-primary) 60%, var(--primary-color));
  border: 1px solid var(--primary-color);
  color: var(--text-color);
  /* Use text color for button text */
  padding: 0.5em 0.5em;
  border-radius: 0.25em;
  cursor: pointer;
  outline: none;
}

.btn:hover,
.btn:focus-visible {
  background: color-mix(in srgb, var(--bg-primary) 50%, var(--primary-color));
}

/* Lighter button modifier */
.btn.secondary {
  background-color: color-mix(in srgb, var(--primary-color) 35%, rgb(255, 255, 255));
  border-color: color-mix(in srgb, var(--primary-color) 25%, rgb(255, 255, 255));
  color: var(--text-color);
}

.btn.secondary:hover,
.btn.secondary:focus-visible {
  background-color: color-mix(in srgb, var(--primary-color) 50%, rgb(255, 255, 255));
}

.dark-mode .btn.secondary {
  background-color: color-mix(in srgb, var(--primary-color) 35%, rgb(0, 0, 0));
  border-color: color-mix(in srgb, var(--primary-color) 25%, rgb(0, 0, 0));
  color: var(--text-color);
}

.dark-mode .btn.secondary:hover,
.dark-mode .btn.secondary:focus-visible {
  background-color: color-mix(in srgb, var(--primary-color) 50%, rgb(0, 0, 0));
}

/* List styles */
.list {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.list li {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

/* Todo item styles */
.todo-item {
  display: flex;
  align-items: center;
  padding: 8px 25px;
  border: 1px solid var(--text-color);
  border-radius: 5px;
  margin-bottom: 3px;
  width: 100%;
  cursor: pointer;
  position: relative;
}

.dark-mode .todo-item {
  background: var(--bg-primary);
}

.todo-item.completed {
  border: 1px solid var(--success-color);
}

/* Drag icon styles */
.drag-icon {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 20px;
  padding-left: 5px;
}

.drag-icon:hover {
  fill: var(--primary-color);
}

/* Checkbox styles */
.checkbox {
  margin-right: 10px;
  display: flex;
}

.checkbox.completed {
  color: var(--success-color);
}

/* Title styles */
.title {
  display: flex;
  align-items: center;
  width: 100%;
  user-select: none;
  overflow-wrap: anywhere;
  min-width: 50px;
  /* Ensure the empty title remains clickable */
}

/* Icon styles */
.delete-icon {
  display: flex;
  margin-left: 7px;
}

.delete-icon:hover {
  color: var(--alert-color);
}

.edit-icon {
  display: flex;
  margin-left: 7px;
}

.edit-icon:hover,
.cancel-icon:hover {
  color: var(--primary-color);
}

.cancel-icon {
  display: flex;
  margin-left: auto;
}

/* Hover effects */
.todo-item:has(.delete-icon:hover) {
  border: 1px dashed var(--alert-color);
}

.todo-item:has(.edit-icon:hover) {
  border: 1px solid var(--primary-color);
}

.drag-over {
  background-color: #6d66664d;
  border: 2px dashed #6D6666 !important;
}

/* Prevent flickering during drag */
.todo-item.drag-over .checkbox,
.todo-item.drag-over .delete-icon,
.todo-item.drag-over .title,
.todo-item.drag-over .edit-icon {
  pointer-events: none;
}

/* React toggle styles */
.react-toggle--checked.toggle-gray .react-toggle-track,
.react-toggle--checked.toggle-gray:hover:not(.react-toggle--disabled) .react-toggle-track {
  background-color: #4D4D4D;
}

.react-toggle--checked.toggle-gray .react-toggle-thumb {
  border-color: gray;
}

.react-toggle.toggle-gray:hover:not(.react-toggle--disabled) .react-toggle-track {
  background-color: gray;
}

/* change react-toggle default box-shadow color*/
.custom-toggle.react-toggle--focus .react-toggle-thumb {
  -webkit-box-shadow: 0px 0px 5px 5px var(--primary-color);
  -moz-box-shadow: 0px 0px 5px 5p var(--primary-color);
  box-shadow: 0px 0px 5px 5px var(--primary-color);
}

/* Content editable styles */
.title:focus-visible {
  text-decoration: underline;
  outline: none;
  /* Remove default outline */
}

/* Fade-in and fade-out animations for todo items */
.todo-item {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.fade-in {
  opacity: 1;
  transform: translateY(0);
}

.fade-out {
  opacity: 0;
  transform: translateX(300px);
}


/* Style for the color picker wrapper */
.color-picker-wrapper {
  display: inline-flex;
  align-items: center;
  /* vertically center text and circle */
  gap: 0.5rem;
  font-weight: 500;
  font-size: 0.9rem;
  color: var(--text-color);
}

.color-picker-wrapper label {
  margin: 0;
  /* Remove default margins */
  user-select: none;
}

.color-picker-wrapper input[type="color"] {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  width: 36px;
  height: 36px;
  cursor: pointer;
  border-radius: 50%;
  padding: 0;
  overflow: hidden;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  transition: box-shadow 0.3s ease, transform 0.2s ease;
  background: transparent;
}

/* WebKit */
.color-picker-wrapper input[type="color"]::-webkit-color-swatch-wrapper {
  padding: 0;
  border-radius: 50%;
}

.color-picker-wrapper input[type="color"]::-webkit-color-swatch {
  border: none;
  border-radius: 50%;
}

/* Firefox */
.color-picker-wrapper input[type="color"]::-moz-color-swatch {
  border: none;
  border-radius: 50%;
}

.color-picker-wrapper input[type="color"]:hover,
.color-picker-wrapper input[type="color"]:focus {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  transform: scale(1.1);
  outline: none;
}

/* Fade-in effect for todo controls */
.todo-controls {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.todo-controls.fade-in {
  opacity: 1;
  transform: translateY(0);
}